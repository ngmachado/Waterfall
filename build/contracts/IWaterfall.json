{
  "contractName": "IWaterfall",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "Claimed",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "startTime",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "endTime",
          "type": "uint96"
        }
      ],
      "name": "NewDistribuition",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint96",
          "name": "startTime",
          "type": "uint96"
        },
        {
          "internalType": "uint96",
          "name": "endTime",
          "type": "uint96"
        }
      ],
      "name": "newDistribuition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "merkleRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "isClaimed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "merkleProofs",
          "type": "bytes32[]"
        }
      ],
      "name": "claim",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Claimed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"startTime\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"endTime\",\"type\":\"uint96\"}],\"name\":\"NewDistribuition\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32[]\",\"name\":\"merkleProofs\",\"type\":\"bytes32[]\"}],\"name\":\"claim\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"isClaimed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"merkleRoot\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"startTime\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"endTime\",\"type\":\"uint96\"}],\"name\":\"newDistribuition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Nuno Axe\",\"details\":\"Waterfall contract interface\",\"events\":{\"Claimed(address,address,uint256)\":{\"details\":\"Claimed Event.\",\"params\":{\"account\":\"Address that received tokens from claim function.\",\"amount\":\"Number of tokens transfered.\",\"token\":\"ERC20 compatible token address that has be distribuited.\"}},\"NewDistribuition(address,address,bytes32,uint96,uint96)\":{\"details\":\"New Distribution Event.\",\"params\":{\"endTime\":\"timestamp to stop accepting claims in the distribuition.\",\"merkleRoot\":\"Top node of a merkle tree structure.\",\"sender\":\"Address that register a new distribution.\",\"startTime\":\"timestamp to accept claims in the distribuition.\",\"token\":\"ERC20 compatible token address that will be distribuited.\"}}},\"kind\":\"dev\",\"methods\":{\"claim(uint256,address,uint256,bytes32[])\":{\"details\":\"Make a single distribuion.\",\"params\":{\"account\":\"Address entitled to make the claim.\",\"amount\":\"Number of tokens to transfer.\",\"index\":\"Position of the leaf in the merkle tree\",\"merkleProofs\":\"of the tree.\"}},\"isClaimed(bytes32,uint256)\":{\"details\":\"Check if claim was executed.\",\"params\":{\"index\":\"Position of the leaf in the merkle tree\",\"merkleRoot\":\"Top node of a merkle tree structure.\"}},\"newDistribuition(bytes32,address,uint96,uint96)\":{\"details\":\"Create a new token distribution.\",\"params\":{\"endTime\":\"Stop accepting claims in the distribuition.\",\"merkleRoot\":\"Top node of a merkle tree structure.\",\"startTime\":\"Start accepting claims in the distribuition.\",\"token\":\"ERC20 compatible token address that will be distribuited.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"claim(uint256,address,uint256,bytes32[])\":{\"notice\":\"claim data combined with merkleProofs will compute the merkle tree root.\"},\"newDistribuition(bytes32,address,uint96,uint96)\":{\"notice\":\"If distribuition is not bound to a time interval, startTime = 0 (zero) and endTime = ype(uint96).max\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/interfaces/IWaterfall.sol\":\"IWaterfall\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":20000},\"remappings\":[]},\"sources\":{\"project:/contracts/interfaces/IWaterfall.sol\":{\"keccak256\":\"0x8e5aa09caa63838836335768266fe4d9c27e20da6f8bc036144eec04c8d7a3c7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bda515581b8c67668811abac7e7a171553ecf066f6ebd1d3c4a3ae0bdacb6116\",\"dweb:/ipfs/QmUSmGvymqkchgqbKFLREgB4S2TvaEAqWW9MayjL13xgPE\"]}},\"version\":1}",
  "bytecode": "0x",
  "deployedBytecode": "0x",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [],
  "sourceMap": "",
  "deployedSourceMap": "",
  "source": "// SPDX-License-Identifier: MIT\npragma solidity 0.8.9;\n\n/**\n * @dev Waterfall contract interface\n *\n * @author Nuno Axe\n *\n */\ninterface IWaterfall {\n\n    /**\n     * @dev Create a new token distribution.\n     * @notice If distribuition is not bound to a time interval, startTime = 0 (zero) and endTime = ype(uint96).max\n     * @param merkleRoot Top node of a merkle tree structure.\n     * @param token ERC20 compatible token address that will be distribuited.\n     * @param startTime Start accepting claims in the distribuition.\n     * @param endTime Stop accepting claims in the distribuition.\n     */\n    function newDistribuition(\n        bytes32 merkleRoot,\n        address token,\n        uint96 startTime,\n        uint96 endTime\n    )\n        external;\n\n    /**\n     * @dev New Distribution Event.\n     * @param sender Address that register a new distribution.\n     * @param token ERC20 compatible token address that will be distribuited.\n     * @param merkleRoot Top node of a merkle tree structure.\n     * @param startTime timestamp to accept claims in the distribuition.\n     * @param endTime timestamp to stop accepting claims in the distribuition.\n     */\n    event NewDistribuition(address indexed sender, address indexed token, bytes32 indexed merkleRoot, uint96 startTime, uint96 endTime);\n\n    /**\n     * @dev Check if claim was executed.\n     * @param merkleRoot Top node of a merkle tree structure.\n     * @param index Position of the leaf in the merkle tree\n     */\n    function isClaimed(bytes32 merkleRoot, uint256 index) external view returns (bool);\n\n    /**\n     * @dev Make a single distribuion.\n     * @notice claim data combined with merkleProofs will compute the merkle tree root.\n     * @param index Position of the leaf in the merkle tree\n     * @param account Address entitled to make the claim.\n     * @param amount Number of tokens to transfer.\n     * @param merkleProofs of the tree.\n     */\n    function claim(\n        uint256 index,\n        address account,\n        uint256 amount,\n        bytes32[] calldata merkleProofs\n    ) external;\n\n    /**\n     * @dev Claimed Event.\n     * @param account Address that received tokens from claim function.\n     * @param token ERC20 compatible token address that has be distribuited.\n     * @param amount Number of tokens transfered.\n     */\n    event Claimed(address account, address token, uint256 amount);\n}",
  "sourcePath": "/Users/logic/ethereum/merkle-drop/contracts/interfaces/IWaterfall.sol",
  "ast": {
    "absolutePath": "project:/contracts/interfaces/IWaterfall.sol",
    "exportedSymbols": {
      "IWaterfall": [
        1140
      ]
    },
    "id": 1141,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1081,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IWaterfall",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1082,
          "nodeType": "StructuredDocumentation",
          "src": "56:70:8",
          "text": " @dev Waterfall contract interface\n @author Nuno Axe"
        },
        "fullyImplemented": false,
        "id": 1140,
        "linearizedBaseContracts": [
          1140
        ],
        "name": "IWaterfall",
        "nameLocation": "137:10:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1083,
              "nodeType": "StructuredDocumentation",
              "src": "155:447:8",
              "text": " @dev Create a new token distribution.\n @notice If distribuition is not bound to a time interval, startTime = 0 (zero) and endTime = ype(uint96).max\n @param merkleRoot Top node of a merkle tree structure.\n @param token ERC20 compatible token address that will be distribuited.\n @param startTime Start accepting claims in the distribuition.\n @param endTime Stop accepting claims in the distribuition."
            },
            "functionSelector": "78e05f92",
            "id": 1094,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "newDistribuition",
            "nameLocation": "616:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "650:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "642:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "678:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "670:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "700:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "693:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1091,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "726:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "719:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:107:8"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:0:8"
            },
            "scope": 1140,
            "src": "607:150:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1095,
              "nodeType": "StructuredDocumentation",
              "src": "763:402:8",
              "text": " @dev New Distribution Event.\n @param sender Address that register a new distribution.\n @param token ERC20 compatible token address that will be distribuited.\n @param merkleRoot Top node of a merkle tree structure.\n @param startTime timestamp to accept claims in the distribuition.\n @param endTime timestamp to stop accepting claims in the distribuition."
            },
            "id": 1107,
            "name": "NewDistribuition",
            "nameLocation": "1176:16:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1209:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1193:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1233:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1217:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1101,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "1256:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1240:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "1275:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1268:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "1293:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1286:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1192:109:8"
            },
            "src": "1170:132:8"
          },
          {
            "documentation": {
              "id": 1108,
              "nodeType": "StructuredDocumentation",
              "src": "1308:174:8",
              "text": " @dev Check if claim was executed.\n @param merkleRoot Top node of a merkle tree structure.\n @param index Position of the leaf in the merkle tree"
            },
            "functionSelector": "85f5276f",
            "id": 1117,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isClaimed",
            "nameLocation": "1496:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "1514:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1506:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1534:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1526:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1505:35:8"
            },
            "returnParameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1564:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:6:8"
            },
            "scope": 1140,
            "src": "1487:83:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1118,
              "nodeType": "StructuredDocumentation",
              "src": "1576:347:8",
              "text": " @dev Make a single distribuion.\n @notice claim data combined with merkleProofs will compute the merkle tree root.\n @param index Position of the leaf in the merkle tree\n @param account Address entitled to make the claim.\n @param amount Number of tokens to transfer.\n @param merkleProofs of the tree."
            },
            "functionSelector": "2e7ba6ef",
            "id": 1130,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1937:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1960:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "1952:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1952:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1983:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "1975:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2008:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2000:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "merkleProofs",
                  "nameLocation": "2043:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2024:31:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1125,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2024:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1126,
                    "nodeType": "ArrayTypeName",
                    "src": "2024:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:119:8"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:8"
            },
            "scope": 1140,
            "src": "1928:143:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1131,
              "nodeType": "StructuredDocumentation",
              "src": "2077:237:8",
              "text": " @dev Claimed Event.\n @param account Address that received tokens from claim function.\n @param token ERC20 compatible token address that has be distribuited.\n @param amount Number of tokens transfered."
            },
            "id": 1139,
            "name": "Claimed",
            "nameLocation": "2325:7:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2341:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2333:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2358:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2350:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1137,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2373:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2365:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2332:48:8"
            },
            "src": "2319:62:8"
          }
        ],
        "scope": 1141,
        "src": "127:2256:8",
        "usedErrors": []
      }
    ],
    "src": "32:2351:8"
  },
  "legacyAST": {
    "absolutePath": "project:/contracts/interfaces/IWaterfall.sol",
    "exportedSymbols": {
      "IWaterfall": [
        1140
      ]
    },
    "id": 1141,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 1081,
        "literals": [
          "solidity",
          "0.8",
          ".9"
        ],
        "nodeType": "PragmaDirective",
        "src": "32:22:8"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IWaterfall",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 1082,
          "nodeType": "StructuredDocumentation",
          "src": "56:70:8",
          "text": " @dev Waterfall contract interface\n @author Nuno Axe"
        },
        "fullyImplemented": false,
        "id": 1140,
        "linearizedBaseContracts": [
          1140
        ],
        "name": "IWaterfall",
        "nameLocation": "137:10:8",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 1083,
              "nodeType": "StructuredDocumentation",
              "src": "155:447:8",
              "text": " @dev Create a new token distribution.\n @notice If distribuition is not bound to a time interval, startTime = 0 (zero) and endTime = ype(uint96).max\n @param merkleRoot Top node of a merkle tree structure.\n @param token ERC20 compatible token address that will be distribuited.\n @param startTime Start accepting claims in the distribuition.\n @param endTime Stop accepting claims in the distribuition."
            },
            "functionSelector": "78e05f92",
            "id": 1094,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "newDistribuition",
            "nameLocation": "616:16:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1092,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1085,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "650:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "642:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1084,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "642:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1087,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "678:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "670:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1086,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "670:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1089,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "700:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "693:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1088,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "693:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1091,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "726:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1094,
                  "src": "719:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1090,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "632:107:8"
            },
            "returnParameters": {
              "id": 1093,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "756:0:8"
            },
            "scope": 1140,
            "src": "607:150:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1095,
              "nodeType": "StructuredDocumentation",
              "src": "763:402:8",
              "text": " @dev New Distribution Event.\n @param sender Address that register a new distribution.\n @param token ERC20 compatible token address that will be distribuited.\n @param merkleRoot Top node of a merkle tree structure.\n @param startTime timestamp to accept claims in the distribuition.\n @param endTime timestamp to stop accepting claims in the distribuition."
            },
            "id": 1107,
            "name": "NewDistribuition",
            "nameLocation": "1176:16:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1097,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1209:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1193:22:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1096,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1193:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1099,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1233:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1217:21:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1098,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1217:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1101,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "1256:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1240:26:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1100,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1240:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1103,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "startTime",
                  "nameLocation": "1275:9:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1268:16:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1102,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1268:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1105,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "endTime",
                  "nameLocation": "1293:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1107,
                  "src": "1286:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 1104,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "1286:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1192:109:8"
            },
            "src": "1170:132:8"
          },
          {
            "documentation": {
              "id": 1108,
              "nodeType": "StructuredDocumentation",
              "src": "1308:174:8",
              "text": " @dev Check if claim was executed.\n @param merkleRoot Top node of a merkle tree structure.\n @param index Position of the leaf in the merkle tree"
            },
            "functionSelector": "85f5276f",
            "id": 1117,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isClaimed",
            "nameLocation": "1496:9:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1113,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1110,
                  "mutability": "mutable",
                  "name": "merkleRoot",
                  "nameLocation": "1514:10:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1506:18:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 1109,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1506:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1112,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1534:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1526:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1111,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1526:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1505:35:8"
            },
            "returnParameters": {
              "id": 1116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1115,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 1117,
                  "src": "1564:4:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 1114,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1564:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1563:6:8"
            },
            "scope": 1140,
            "src": "1487:83:8",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 1118,
              "nodeType": "StructuredDocumentation",
              "src": "1576:347:8",
              "text": " @dev Make a single distribuion.\n @notice claim data combined with merkleProofs will compute the merkle tree root.\n @param index Position of the leaf in the merkle tree\n @param account Address entitled to make the claim.\n @param amount Number of tokens to transfer.\n @param merkleProofs of the tree."
            },
            "functionSelector": "2e7ba6ef",
            "id": 1130,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "claim",
            "nameLocation": "1937:5:8",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 1128,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1120,
                  "mutability": "mutable",
                  "name": "index",
                  "nameLocation": "1960:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "1952:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1119,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1952:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1122,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1983:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "1975:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1975:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1124,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2008:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2000:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1123,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2000:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1127,
                  "mutability": "mutable",
                  "name": "merkleProofs",
                  "nameLocation": "2043:12:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1130,
                  "src": "2024:31:8",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 1125,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "2024:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 1126,
                    "nodeType": "ArrayTypeName",
                    "src": "2024:9:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1942:119:8"
            },
            "returnParameters": {
              "id": 1129,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2070:0:8"
            },
            "scope": 1140,
            "src": "1928:143:8",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 1131,
              "nodeType": "StructuredDocumentation",
              "src": "2077:237:8",
              "text": " @dev Claimed Event.\n @param account Address that received tokens from claim function.\n @param token ERC20 compatible token address that has be distribuited.\n @param amount Number of tokens transfered."
            },
            "id": 1139,
            "name": "Claimed",
            "nameLocation": "2325:7:8",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 1138,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 1133,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2341:7:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2333:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1132,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2333:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1135,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2358:5:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2350:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1134,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2350:7:8",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 1137,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2373:6:8",
                  "nodeType": "VariableDeclaration",
                  "scope": 1139,
                  "src": "2365:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1136,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2365:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2332:48:8"
            },
            "src": "2319:62:8"
          }
        ],
        "scope": 1141,
        "src": "127:2256:8",
        "usedErrors": []
      }
    ],
    "src": "32:2351:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.9+commit.e5eed63a.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.3",
  "updatedAt": "2021-10-19T10:31:47.400Z",
  "devdoc": {
    "author": "Nuno Axe",
    "details": "Waterfall contract interface",
    "events": {
      "Claimed(address,address,uint256)": {
        "details": "Claimed Event.",
        "params": {
          "account": "Address that received tokens from claim function.",
          "amount": "Number of tokens transfered.",
          "token": "ERC20 compatible token address that has be distribuited."
        }
      },
      "NewDistribuition(address,address,bytes32,uint96,uint96)": {
        "details": "New Distribution Event.",
        "params": {
          "endTime": "timestamp to stop accepting claims in the distribuition.",
          "merkleRoot": "Top node of a merkle tree structure.",
          "sender": "Address that register a new distribution.",
          "startTime": "timestamp to accept claims in the distribuition.",
          "token": "ERC20 compatible token address that will be distribuited."
        }
      }
    },
    "kind": "dev",
    "methods": {
      "claim(uint256,address,uint256,bytes32[])": {
        "details": "Make a single distribuion.",
        "params": {
          "account": "Address entitled to make the claim.",
          "amount": "Number of tokens to transfer.",
          "index": "Position of the leaf in the merkle tree",
          "merkleProofs": "of the tree."
        }
      },
      "isClaimed(bytes32,uint256)": {
        "details": "Check if claim was executed.",
        "params": {
          "index": "Position of the leaf in the merkle tree",
          "merkleRoot": "Top node of a merkle tree structure."
        }
      },
      "newDistribuition(bytes32,address,uint96,uint96)": {
        "details": "Create a new token distribution.",
        "params": {
          "endTime": "Stop accepting claims in the distribuition.",
          "merkleRoot": "Top node of a merkle tree structure.",
          "startTime": "Start accepting claims in the distribuition.",
          "token": "ERC20 compatible token address that will be distribuited."
        }
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "claim(uint256,address,uint256,bytes32[])": {
        "notice": "claim data combined with merkleProofs will compute the merkle tree root."
      },
      "newDistribuition(bytes32,address,uint96,uint96)": {
        "notice": "If distribuition is not bound to a time interval, startTime = 0 (zero) and endTime = ype(uint96).max"
      }
    },
    "version": 1
  }
}